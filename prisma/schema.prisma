generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// RssSource 模型：存储 RSS 源的基本信息
model RssSource {
  id            Int      @id @default(autoincrement()) // 主键，自增
  sourceUrl     String // 文章来源 URL
  rssID         String   @unique // RSS ID, 用于生成 RSS 源，并作为唯一索引
  customName    String? // 用户自定义名称
  rssOriginInfo String? // 原始的 RSS 信息，保存除具体的 item 信息以外的所有信息，用于重新输出时使用
  createdAt     DateTime @default(now()) // 创建时间，默认为当前时间
  updatedAt     DateTime @updatedAt // 更新时间戳

  // 关系字段
  rssItems RssItem[] // 与 RssItem 表的关系 (一对多)
}

// RssItem 模型：存储每个 RSS 条目的详细信息
model RssItem {
  id              Int       @id @default(autoincrement()) // 主键，自增
  rssSourceId     Int // 关联的 RSS 源 ID，指向 RssSource 表的主键
  uniqueArticleId String // 根据文章内容+url hash生成的唯一id
  itemUrl         String // 文章 URL
  itemOriginInfo  String? // 每一个rssItem的原始信息
  updatedAt       DateTime  @updatedAt // 更新时间戳，系统自动生成
  createdAt       DateTime  @default(now()) // 创建时间，系统自动生成

  // 关联关系字段
  rssSource    RssSource     @relation(fields: [rssSourceId], references: [id]) // 与 RssSource 表的关系
  translations Translation[] // 与 Translation 表的关系 (一对多)
}

// Translation 模型：存储每个 RSS 条目的翻译内容
model Translation {
  id        Int      @id @default(autoincrement()) // 主键，自增
  rssItemId Int // 关联的 RSS 条目 ID，指向 RssItem 表的主键
  language  String // 翻译的目标语言
  title     String? // 翻译的标题
  content   String? // 翻译的内容
  createdAt DateTime @default(now()) // 翻译的创建时间
  rssItem   RssItem  @relation(fields: [rssItemId], references: [id]) // 与 RssItem 表的关系
}
