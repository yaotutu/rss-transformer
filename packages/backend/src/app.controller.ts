import { Controller, Get } from '@nestjs/common';
import { AppService } from './app.service';
import { HtmlSplitterService } from './common/rss-parser/html-splitter.service';
const testHtml =
  '<p>\n</p><p></p>\n\n<p>This document discusses what <code translate="no" dir="ltr">userVerification</code> is in WebAuthn, and the browser behaviors that result when <code translate="no" dir="ltr">userVerification</code> is specified during passkey creation or authentication.</p>\n\n<h2 id="what_is_user_verification_in_webauthn" data-text="What is &quot;user verification&quot; in WebAuthn?" tabindex="-1">What is "user verification" in WebAuthn?</h2>\n\n<p>Passkeys are built on public key cryptography. By creating a passkey, a public-private key pair is generated, the private key is stored by the passkey provider, and the public key is returned to the relying party\'s (RP) server to store. The server can authenticate a user by verifying a signature signed by the same passkey using the paired public key. The "user present" (UP) flag on a public key credential proves that someone interacted with the device during the authentication.</p>\n\n<p>User verification is an optional layer of security that seeks to assert that the correct person was present during authentication, not just some person, as user presence asserts. On smartphones, this is usually done by using the screen-lock mechanism, whether that be a biometric or either a PIN or password. Whether user verification was performed is reported in the "UV" flag that is returned in the authenticator data during passkey registration and authentication</p>\n\n<figure>\n  <img src="https://web.dev/static/articles/webauthn-user-verification/image/fig-1.png" width="520" height="317.94" alt="A screenshot of a user verification dialog on iCloud Keychain on macOS. The dialog prompts the user to sign in using Touch ID, displaying the origin requesting authentication, as well as the username. At the top right of the dialog is a button labeled \'Cancel\'." srcset="https://web.dev/static/articles/webauthn-user-verification/image/fig-1_36.png 36w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_48.png 48w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_72.png 72w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_96.png 96w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_480.png 480w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_720.png 720w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_856.png 856w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_960.png 960w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_1440.png 1440w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_1920.png 1920w,https://web.dev/static/articles/webauthn-user-verification/image/fig-1_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px" referrerpolicy="no-referrer">\n  <figcaption>\n    User verification dialog on iCloud Keychain on macOS.\n  </figcaption>\n</figure>\n\n<figure>\n  <img src="https://web.dev/static/articles/webauthn-user-verification/image/fig-2.png" width="480" height="551.32" loading="lazy" alt="A screenshot of a user verification dialog on Chrome for Android. The dialog prompts the user to verify their identity by using facial recognition or fingerprint detection, and displays the origin requesting authentication. At the bottom left is an option to verify using a PIN." srcset="https://web.dev/static/articles/webauthn-user-verification/image/fig-2_36.png 36w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_48.png 48w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_72.png 72w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_96.png 96w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_480.png 480w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_720.png 720w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_856.png 856w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_960.png 960w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_1440.png 1440w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_1920.png 1920w,https://web.dev/static/articles/webauthn-user-verification/image/fig-2_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px" referrerpolicy="no-referrer">\n  <figcaption>\n    User verification dialog on Android Chrome.\n  </figcaption>\n</figure>\n\n<h2 id="how_up_and_uv_are_validated_on_the_server" data-text="How UP and UV are validated on the server" tabindex="-1">How UP and UV are validated on the server</h2>\n\n<p>The user presence (UP) and user verified (UV) boolean flags are signaled to the server in the authenticator data field. During authentication, the contents of the authenticator data field can be validated by verifying the signature using the stored public key. As long as the signature is valid, the server can consider the flags genuine.</p>\n\n<figure>\n  <img src="https://web.dev/static/articles/webauthn-user-verification/image/fig-3.png" width="1648" height="372" loading="lazy" alt="A depiction of the authentication data structure. From left to right, each section of the data structure reads \'RP ID HASH\' (32 bytes), \'FLAGS\' (1 byte), \'COUNTER\' (4 bytes, big-endian uint32), \'ATTESTE CRED. DATA\' (variable length if present), and \'EXTENSIONS\' (variable length if present (CBOR)). The \'FLAGS\' section is expanded to show a list of potential flags, labeled from left to right: \'ED\', \'AT\', \'0\', \'BS\', \'BE\', \'UV\', \'0\', and \'UP\'." srcset="https://web.dev/static/articles/webauthn-user-verification/image/fig-3_36.png 36w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_48.png 48w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_72.png 72w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_96.png 96w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_480.png 480w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_720.png 720w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_856.png 856w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_960.png 960w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_1440.png 1440w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_1920.png 1920w,https://web.dev/static/articles/webauthn-user-verification/image/fig-3_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px" referrerpolicy="no-referrer">\n  <figcaption>\n    Authenticator data fields in a public key credential.\n  </figcaption>\n</figure>\n\n<p>On passkey registration and authentication, the server should examine that the UP flag is <code translate="no" dir="ltr">true</code>, and whether the UV flag is <code translate="no" dir="ltr">true</code> or <code translate="no" dir="ltr">false</code>, depending on the requirement.</p>\n\n<h2 id="specifying_the_userverification_parameter" data-text="Specifying the userVerification parameter" tabindex="-1">Specifying the <code translate="no" dir="ltr">userVerification</code> parameter</h2>\n\n<p>Per the <a href="https://www.w3.org/TR/webauthn/">WebAuthn specification</a>, the RP can request a user verification with a <code translate="no" dir="ltr">userVerification</code> parameter on both credential creation and assertion. It accepts <code translate="no" dir="ltr">\'preferred\'</code>, <code translate="no" dir="ltr">\'required\'</code>, or <code translate="no" dir="ltr">\'discouraged\'</code> which respectively means:</p>\n\n<ul>\n<li><strong><code translate="no" dir="ltr">\'preferred\'</code></strong> (default): Using a user verification method on the device <strong>is preferred</strong>, but can be skipped if it\'s not available. The response credential contains a UV flag value of <code translate="no" dir="ltr">true</code> if user verification was performed, and <code translate="no" dir="ltr">false</code> if UV was not performed.</li>\n<li><strong><code translate="no" dir="ltr">\'required\'</code></strong>: Invoking a user verification method available on the device is required. If one is not available, the request fails locally. This means the response credential always returns with the UV flag set to <code translate="no" dir="ltr">true</code>.</li>\n<li><strong><code translate="no" dir="ltr">\'discouraged\'</code></strong>: Using a user verification method is discouraged. However, depending on the device, user verification may be performed anyway, and the UV flag can contain <code translate="no" dir="ltr">true</code> or <code translate="no" dir="ltr">false</code>.</li>\n</ul>\n\n<h3 id="sample_code_for_passkey_creation" data-text="Sample code for passkey creation:" tabindex="-1">Sample code for passkey creation:</h3>\n<pre class="prettyprint lang-js" translate="no" dir="ltr"><code translate="no" dir="ltr">const publicKeyCredentialCreationOptions = {\n  // ...\n  authenticatorSelection: {\n    authenticatorAttachment: \'platform\',\n    residentKey: \'required\',\n    requireResidentKey: true,\n    userVerification: \'preferred\'\n  }\n};\n\nconst credential = await navigator.credentials.create({\n  publicKey: publicKeyCredentialCreationOptions\n});\n</code></pre>\n<h3 id="sample_code_for_passkey_authentication" data-text="Sample code for passkey authentication:" tabindex="-1">Sample code for passkey authentication:</h3>\n<pre class="prettyprint lang-js" translate="no" dir="ltr"><code translate="no" dir="ltr">const publicKeyCredentialRequestOptions = {\n  challenge: /* Omitted challenge data... */,\n  rpId: \'example.com\',\n  userVerification: \'preferred\'\n};\n\nconst credential = await navigator.credentials.get({\n  publicKey: publicKeyCredentialRequestOptions\n});\n</code></pre>\n<h2 id="which_option_should_you_choose_for_userverification" data-text="Which option should you choose for userVerification?" tabindex="-1">Which option should you choose for <code translate="no" dir="ltr">userVerification</code>?</h2>\n\n<p>The <code translate="no" dir="ltr">userVerification</code> value you should use depends on your application requirements, as well as your user experience needs.</p>\n\n<h3 id="when_to_use_userverificationpreferred" data-text="When to use userVerification=\'preferred\'" tabindex="-1">When to use <code translate="no" dir="ltr">userVerification=\'preferred\'</code></h3>\n\n<p>Use <code translate="no" dir="ltr">userVerification=\'preferred\'</code> if you prioritize user experience over protection.</p>\n\n<p>There are environments where user verification is more friction than protection. For example, on macOS where Touch ID is not available (because the device doesn\'t support it, it\'s disabled, or the device is in clamshell mode), the user is asked to enter their system password instead. This causes friction, and the user may abandon authentication entirely. If eliminating friction is more important to you, use <code translate="no" dir="ltr">userVerification=\'preferred\'</code>.</p>\n\n<figure>\n  <img src="https://web.dev/static/articles/webauthn-user-verification/image/fig-4.png" width="520" height="386.15" loading="lazy" alt="A screenshot of a passkey dialog on macOS that appears when Touch ID is not available. The dialog contains info such as the origin requesting authentication, as well as the username. At the top right of the dialog is a button labeled \'Cancel\'." srcset="https://web.dev/static/articles/webauthn-user-verification/image/fig-4_36.png 36w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_48.png 48w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_72.png 72w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_96.png 96w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_480.png 480w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_720.png 720w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_856.png 856w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_960.png 960w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_1440.png 1440w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_1920.png 1920w,https://web.dev/static/articles/webauthn-user-verification/image/fig-4_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px" referrerpolicy="no-referrer">\n  <figcaption>\n    A passkey dialog displayed on macOS when Touch ID is not available.\n  </figcaption>\n</figure>\n\n<p>With <code translate="no" dir="ltr">userVerification=\'preferred\'</code>, the UV flag is <code translate="no" dir="ltr">true</code> if user verification is successfully performed, and <code translate="no" dir="ltr">false</code> if user verification is skipped. For example, on macOS where Touch ID is not available, it asks the user to click a button to skip user verification, and the public key credential includes a <code translate="no" dir="ltr">false</code> UV flag.</p>\n\n<p>The UV flag can then be a signal in your risk analysis. If the sign-in attempt seems risky due to other factors, you may want to present additional sign-in challenges to the user if user verification was not performed.</p>\n\n<aside class="note">\n  <strong>Note:</strong> Authentication at google.com currently uses <code translate="no" dir="ltr">userVerification=\'preferred\'</code>.\n</aside>\n\n<h3 id="when_to_use_userverificationrequired" data-text="When to use userVerification=\'required\'" tabindex="-1">When to use <code translate="no" dir="ltr">userVerification=\'required\'</code></h3>\n\n<p>Use <code translate="no" dir="ltr">userVerification=\'required\'</code> if you think both UP and UV are absolutely necessary.</p>\n\n<p>A downside of this option is that the user may experience more friction when signing in. For example, on macOS where Touch ID is not available, the user is asked to enter their system password. </p>\n\n<p>With <code translate="no" dir="ltr">userVerification=\'required\'</code>, you can ensure that user verification is performed on the device. Make sure the server verifies that the UV flag is <code translate="no" dir="ltr">true</code>.</p>\n\n<h2 id="conclusion" data-text="Conclusion" tabindex="-1">Conclusion</h2>\n\n<p>By leveraging user verification, passkey-relying parties can gauge the likelihood of the device owner signing in. It\'s their choice whether to require user verification, or make it optional depending on how critical the fallback sign-in mechanism impacts the user flow. Make sure the server checks the UP flag and UV flag for passkey user authentication.</p>\n\n  \n\n  \n';

@Controller()
export class AppController {
  constructor(
    private readonly appService: AppService,
    private readonly htmlSplitterService: HtmlSplitterService,
  ) {}

  @Get()
  getHello(): string {
    return this.appService.getHello();
  }
  @Get('test-parse')
  testParseHtml() {
    const htmlContent = testHtml;
    const parsedDom = this.htmlSplitterService.parseHtmlContent(htmlContent);
    console.log(parsedDom);
    return 'Check the console for the parsed DOM tree';
  }

  @Get('test-split')
  testSplitHtml() {
    const htmlContent = testHtml;
    const chunks = this.htmlSplitterService.splitHtmlContent(htmlContent);
    console.log(chunks);
    return 'Check the console for the split HTML chunks';
  }
}
